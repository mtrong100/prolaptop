import nodemailer from "nodemailer";
import dotenv from "dotenv";
import { formatCurrencyVND } from "../utils/helper.js";

dotenv.config();

const transporter = nodemailer.createTransport({
  host: "smtp.gmail.com",
  port: 465,
  secure: true,
  auth: {
    user: process.env.NODEMAILER_ACCOUNT,
    pass: process.env.NODEMAILER_PASSWORD,
  },
});

export const sendConfirmationEmail = async (email, token) => {
  const verificationLink = `${process.env.LOCAL_CLIENT_URL}/verify-email?token=${token}`;

  const htmlContent = `
    <html>
      <head>
        <style>
          body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
          }
          .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
          }
          h1 {
            color: #333333;
          }
          .btn {
            display: inline-block;
            padding: 10px 20px;
            background-color: #007bff;
            color: #ffffff ;
            text-decoration: none ;
            border-radius: 5px;
            transition: background-color 0.3s ease;
          }
          .btn:hover {
            background-color: #0056b3;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <h1>Vui l√≤ng x√°c minh email ƒëƒÉng k√≠ c·ªßa b·∫°n</h1>
          <a href="${verificationLink}" class="btn">Verify Email</a>
        </div>
      </body>
    </html>
  `;

  const mailOptions = {
    from: '"ProLaptop üëª" <ProLaptop@gmail.com>',
    to: email,
    subject: "Vui l√≤ng x√°c minh emails",
    text: `C·∫£m ∆°n b·∫°n ƒë√£ t·∫°o m·ªôt t√†i kho·∫£n. X√°c minh email c·ªßa b·∫°n ƒë·ªÉ b·∫°n c√≥ th·ªÉ thi·∫øt l·∫≠p v√† nhanh ch√≥ng.`,
    html: htmlContent,
  };

  transporter.sendMail(mailOptions, (error, info) => {
    if (error) {
      console.error("Failed to send email:", error);
    } else {
      console.log("Email sent:", info.response);
    }
  });
};

export const sendOtpResetPassword = async (email, otp) => {
  const mailOptions = {
    from: '"ProLaptop üëª" <ProLaptop99@gmail.com>',
    to: email,
    subject: "M√£ OTP ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u",
    text: `M√£ OTP ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n l√†: `,
    html: `<h1>${otp}</h1>`,
  };

  transporter.sendMail(mailOptions, (error, info) => {
    if (error) {
      console.error("Failed to send email:", error);
    } else {
      console.log("Email sent:", info.response);
    }
  });
};

export const sendEmailCompletePurchase = async (
  orderItems,
  shippingAddress,
  shippingMethod,
  couponCodeUsed,
  paymentMethod,
  totalCost
) => {
  const htmlContent = `
    <html>
      <head>
        <style>
          body {
            font-family: 'Arial', sans-serif;
            margin: 20px;
          }

          h2 {
            color: #4CAF50;
          }

          table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
          }

          th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
          }

          th {
            background-color: #f2f2f2;
          }

          img {
            max-width: 100px;
            max-height: 100px;
          }

          p {
            line-height: 1.6;
          }

          strong {
            font-weight: bold;
          }
        </style>
      </head>
      <body>
        <h1>C·∫£m ∆°n ${shippingAddress?.fullName} v√¨ ƒë√£ mua h√†ng!</h1>
        <p>Xin ch√†o, Ch√∫ng t√¥i r·∫•t vui m·ª´ng ƒë∆∞·ª£c th√¥ng b√°o r·∫±ng ƒë∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t th√†nh c√¥ng. D∆∞·ªõi ƒë√¢y l√† th√¥ng tin chi ti·∫øt v·ªÅ vi·ªác mua h√†ng c·ªßa b·∫°n</p>
        
        <table>
          <thead>
            <tr>
              <th>H√¨nh ·∫£nh</th>
              <th>T√™n s·∫£n ph·∫©m</th>
              <th>Gi√° ti·ªÅn</th>
              <th>S·ªë l∆∞·ª£ng</th>
            </tr>
          </thead>
          <tbody>
            ${orderItems
              .map(
                (item) => `
              <tr>
                <td>
                  <div style="margin: 0 auto;">
                    <img src="${item?.image}" alt="${item?.name}">
                  </div>
                </td>
                <td>${item?.name}</td>
                <td>${item?.quantity}</td>
                <td>${formatCurrencyVND(item.quantity * item.price)}</td>
              </tr>
            `
              )
              .join("")}
          </tbody>
        </table>

        <div>Ph∆∞∆°ng th·ª©c thanh to√°n: ${paymentMethod} </div>
        <div>Ph∆∞∆°ng th·ª©c ship h√†ng: ${
          shippingMethod?.name
        } : ${formatCurrencyVND(shippingMethod?.price)}</div>
        <div>M√£ gi·∫£m gi√° ƒë√£ d√πng: ${couponCodeUsed?.name} - ${
    couponCodeUsed?.discount
  }%</div>

        <h2>T·ªïng c·ªông: ${formatCurrencyVND(totalCost)}</h2>
        
        <p>C·∫£m ∆°n b·∫°n ƒë√£ l·ª±a ch·ªçn s·∫£n ph·∫©m c·ªßa ch√∫ng t√¥i. N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi ho·∫∑c m·ªëi quan t√¢m n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
        
        <p>Tr√¢n tr·ªçng c·∫£m ∆°n,<br>ProLaptop Shop Team</p>
      </body>
    </html>
  `;

  await transporter.sendMail({
    from: '"ProLaptop üëª" <ProLaptop@gmail.com>',
    to: shippingAddress?.email,
    subject: "X√°c nh·∫≠n ƒë∆°n h√†ng",
    text: "C√°m ∆°n v√¨ ƒë√£ mua h√†ng! Chi ti·∫øt ƒë·∫∑t h√†ng c·ªßa b·∫°n ƒë∆∞·ª£c ƒë√≠nh k√®m.",
    html: htmlContent,
  });
};
